#include <iostream>
#include <string>

using namespace std;


class Fraction {
public:
    Fraction(int numerator, int denominator);
    string toString();
    double toDouble();

private:
    int numerator;
    int denominator;
};

Fraction::Fraction(int numerator, int denominator) : numerator(numerator), denominator(denominator) {}

string Fraction::toString() {
    int whole = numerator / denominator;
    int remainder = abs(numerator) % denominator;
    string sign = (numerator < 0) ? "-" : "";

    string result = sign + to_string(whole);
    
    if (remainder != 0) {
        result += " " + to_string(remainder) + "/" + to_string(denominator);
    }

    return result;
}

double Fraction::toDouble() {
    return static_cast<double>(numerator) / denominator;
}

int main() {
    int num, den;
    string input;

    cout << "Enter a fraction in the form '[numerator] / [denominator]': ";
    getline(cin, input);

    // Find the position of '/'
    size_t slashPos = input.find('/');

    // Extract numerator and denominator from the input string
    num = stoi(input.substr(0, slashPos));
    den = stoi(input.substr(slashPos + 1));

    Fraction fraction(num, den);

    cout << "Fraction: " << fraction.toString() << endl;
    cout << "Decimal: " << fraction.toDouble() << endl;

    return 0;
}